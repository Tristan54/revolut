services:

  postgres:
    container_name: db
    image: postgres:13.1-alpine
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    volumes:
      - ./db:/docker-entrypoint-initdb.d
      - ./data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    networks:
      - gateway
    healthcheck:
      test: ["CMD-SHELL", "psql -U keycloak && psql -U revolut && psql -U conversion"]
      interval: 10s
      timeout: 5s
      retries: 5
  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:latest
    volumes:
      - ./imports:/opt/jboss/keycloak/imports
    environment:
      DB_VENDOR: POSTGRES
      DB_ADDR: postgres
      DB_DATABASE: keycloak
      DB_USER: user
      DB_SCHEMA: public
      DB_PASSWORD: password
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: Pa55w0rd
    command: [ "-Djboss.socket.binding.port-offset=100" , "-b 0.0.0.0 -Dkeycloak.migration.action=import -Dkeycloak.migration.provider=singleFile -Dkeycloak.migration.file=/opt/jboss/keycloak/imports/keycloak-export.json -Dkeycloak.profile.feature.upload_scripts=enabled"]
    ports:
      - 8082:8180
    networks:
      - gateway
    depends_on:
      postgres:
        condition: service_healthy
  revolut:
    build:
      context: ./banque-service
    environment:
      - keycloak.auth-server-url=http://keycloak:8180/auth
      - server.port=8080
    container_name: revolut
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - gateway
    ports:
      - 8080:8080
  conversion:
    build:
      context: ./conversion-service
    container_name: conversion
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - gateway
    ports:
      - 8081:8081
      
volumes:
  data:

networks:
  gateway: {}
  